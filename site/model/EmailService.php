<?php
require_once 'PHPMailer/PHPMailer.php';
require_once 'PHPMailer/SMTP.php';
require_once 'PHPMailer/Exception.php';

use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\SMTP;
use PHPMailer\PHPMailer\Exception;

class EmailService {
    private $mail;
    
    public function __construct() {
        $this->mail = new PHPMailer(true);
        $this->setupSMTP();
    }
    
    private function setupSMTP() {
        try {
            // C·∫•u h√¨nh SMTP cho Gmail (s·ª≠ d·ª•ng c√πng config v·ªõi SendOTP.php)
            $this->mail->isSMTP();
            $this->mail->Host = 'smtp.gmail.com';
            $this->mail->SMTPAuth = true;
            $this->mail->Username = 'sivam.7e@gmail.com';           // S·ª≠ d·ª•ng email ƒë√£ c·∫•u h√¨nh
            $this->mail->Password = 'lfee ghmu rchv wkkr';          // S·ª≠ d·ª•ng App Password ƒë√£ c√≥
            $this->mail->SMTPSecure = 'tls';                        // Kh·ªõp v·ªõi SendOTP.php
            $this->mail->Port = 587;
            $this->mail->CharSet = 'UTF-8';
            
            // C·∫•u h√¨nh ng∆∞·ªùi g·ª≠i
            $this->mail->setFrom('sivam.7e@gmail.com', 'COMEM Store');
            
        } catch (Exception $e) {
            throw new Exception("L·ªói c·∫•u h√¨nh email: {$this->mail->ErrorInfo}");
        }
    }
    
    public function sendOTP($toEmail, $userName, $otp) {
        try {
            // Reset recipients
            $this->mail->clearAddresses();
            $this->mail->clearAttachments();
            
            // Ng∆∞·ªùi nh·∫≠n
            $this->mail->addAddress($toEmail, $userName);
            
            // N·ªôi dung email
            $this->mail->isHTML(true);
            $this->mail->Subject = 'M√£ OTP Kh√¥i Ph·ª•c M·∫≠t Kh·∫©u - COMEM Store';
            
            $htmlBody = $this->getOTPEmailTemplate($userName, $otp);
            $this->mail->Body = $htmlBody;
            
            // Text version cho email client kh√¥ng h·ªó tr·ª£ HTML
            $this->mail->AltBody = "Xin ch√†o {$userName},\n\n"
                                 . "M√£ OTP kh√¥i ph·ª•c m·∫≠t kh·∫©u c·ªßa b·∫°n l√†: {$otp}\n"
                                 . "M√£ n√†y c√≥ hi·ªáu l·ª±c trong 15 ph√∫t.\n\n"
                                 . "N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu kh√¥i ph·ª•c m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y.\n\n"
                                 . "Tr√¢n tr·ªçng,\nCOMEM Store";
            
            // G·ª≠i email
            $result = $this->mail->send();
            
            // Log th√†nh c√¥ng
            error_log("Email sent successfully to: {$toEmail}");
            
            return $result;
            
        } catch (Exception $e) {
            // Log l·ªói chi ti·∫øt
            $errorMsg = "Email Error to {$toEmail}: " . $e->getMessage();
            error_log($errorMsg);
            
            // N√©m l·∫°i exception v·ªõi th√¥ng tin chi ti·∫øt h∆°n
            if (strpos($e->getMessage(), 'SMTP connect()') !== false) {
                throw new Exception("Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn Gmail SMTP. Ki·ªÉm tra k·∫øt n·ªëi internet v√† c·∫•u h√¨nh email.");
            } elseif (strpos($e->getMessage(), 'SMTP Error: Could not authenticate') !== false) {
                throw new Exception("L·ªói x√°c th·ª±c Gmail. Ki·ªÉm tra l·∫°i email v√† App Password.");
            } elseif (strpos($e->getMessage(), 'Invalid address') !== false) {
                throw new Exception("ƒê·ªãa ch·ªâ email kh√¥ng h·ª£p l·ªá: {$toEmail}");
            } else {
                throw new Exception("L·ªói g·ª≠i email: " . $e->getMessage());
            }
        }
    }
    
    private function getOTPEmailTemplate($userName, $otp) {
        return "
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset='UTF-8'>
            <meta name='viewport' content='width=device-width, initial-scale=1.0'>
            <title>M√£ OTP Kh√¥i Ph·ª•c M·∫≠t Kh·∫©u</title>
            <style>
                body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
                .container { max-width: 600px; margin: 0 auto; padding: 20px; }
                .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; text-align: center; padding: 30px; border-radius: 10px 10px 0 0; }
                .content { background: #f9f9f9; padding: 30px; border-radius: 0 0 10px 10px; }
                .otp-box { background: white; border: 2px dashed #667eea; padding: 20px; text-align: center; margin: 20px 0; border-radius: 8px; }
                .otp-code { font-size: 32px; font-weight: bold; color: #667eea; letter-spacing: 8px; margin: 10px 0; }
                .warning { background: #fff3cd; border: 1px solid #ffeaa7; color: #856404; padding: 15px; border-radius: 5px; margin: 20px 0; }
                .footer { text-align: center; margin-top: 30px; color: #666; font-size: 14px; }
                .btn { display: inline-block; padding: 12px 24px; background: #667eea; color: white; text-decoration: none; border-radius: 5px; margin: 10px 0; }
            </style>
        </head>
        <body>
            <div class='container'>
                <div class='header'>
                    <h1>üîê Kh√¥i Ph·ª•c M·∫≠t Kh·∫©u</h1>
                    <p>COMEM Store</p>
                </div>
                
                <div class='content'>
                    <h2>Xin ch√†o {$userName}!</h2>
                    <p>Ch√∫ng t√¥i nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu kh√¥i ph·ª•c m·∫≠t kh·∫©u cho t√†i kho·∫£n c·ªßa b·∫°n.</p>
                    
                    <div class='otp-box'>
                        <h3>M√£ OTP c·ªßa b·∫°n l√†:</h3>
                        <div class='otp-code'>{$otp}</div>
                        <p><strong>C√≥ hi·ªáu l·ª±c trong 15 ph√∫t</strong></p>
                    </div>
                    
                    <div class='warning'>
                        <strong>‚ö†Ô∏è L∆∞u √Ω b·∫£o m·∫≠t:</strong><br>
                        ‚Ä¢ Kh√¥ng chia s·∫ª m√£ OTP n√†y v·ªõi b·∫•t k·ª≥ ai<br>
                        ‚Ä¢ Ch·ªâ nh·∫≠p m√£ tr√™n trang web ch√≠nh th·ª©c c·ªßa COMEM<br>
                        ‚Ä¢ N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu kh√¥i ph·ª•c m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y
                    </div>
                    
                    <p>Sau khi nh·∫≠p m√£ OTP, b·∫°n s·∫Ω c√≥ th·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u m·ªõi cho t√†i kho·∫£n.</p>
                    
                    <div class='footer'>
                        <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.</p>
                        <p><strong>COMEM Store</strong> - H·ªá th·ªëng qu·∫£n l√Ω b√°n h√†ng</p>
                        <p>¬© 2025 COMEM. All rights reserved.</p>
                    </div>
                </div>
            </div>
        </body>
        </html>";
    }
    
    public function sendPasswordResetConfirmation($toEmail, $userName) {
        try {
            $this->mail->clearAddresses();
            $this->mail->clearAttachments();
            
            $this->mail->addAddress($toEmail, $userName);
            $this->mail->isHTML(true);
            $this->mail->Subject = 'M·∫≠t Kh·∫©u ƒê√£ ƒê∆∞·ª£c Thay ƒê·ªïi - COMEM Store';
            
            $htmlBody = "
            <!DOCTYPE html>
            <html>
            <head>
                <meta charset='UTF-8'>
                <style>
                    body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
                    .container { max-width: 600px; margin: 0 auto; padding: 20px; }
                    .header { background: #28a745; color: white; text-align: center; padding: 30px; border-radius: 10px 10px 0 0; }
                    .content { background: #f9f9f9; padding: 30px; border-radius: 0 0 10px 10px; }
                    .success-box { background: #d4edda; border: 1px solid #c3e6cb; color: #155724; padding: 15px; border-radius: 5px; margin: 20px 0; }
                </style>
            </head>
            <body>
                <div class='container'>
                    <div class='header'>
                        <h1>‚úÖ Th√†nh C√¥ng!</h1>
                        <p>COMEM Store</p>
                    </div>
                    
                    <div class='content'>
                        <h2>Xin ch√†o {$userName}!</h2>
                        
                        <div class='success-box'>
                            <strong>M·∫≠t kh·∫©u c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c thay ƒë·ªïi th√†nh c√¥ng!</strong>
                        </div>
                        
                        <p>Th·ªùi gian thay ƒë·ªïi: " . date('d/m/Y H:i:s') . "</p>
                        
                        <p>N·∫øu b·∫°n kh√¥ng th·ª±c hi·ªán thay ƒë·ªïi n√†y, vui l√≤ng li√™n h·ªá ngay v·ªõi ch√∫ng t√¥i ƒë·ªÉ b·∫£o m·∫≠t t√†i kho·∫£n.</p>
                        
                        <p>Tr√¢n tr·ªçng,<br><strong>COMEM Store</strong></p>
                    </div>
                </div>
            </body>
            </html>";
            
            $this->mail->Body = $htmlBody;
            $this->mail->send();
            return true;
            
        } catch (Exception $e) {
            error_log("Email Error: " . $e->getMessage());
            return false;
        }
    }
}
?>
